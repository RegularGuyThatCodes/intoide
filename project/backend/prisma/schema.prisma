// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(cuid())
  email        String    @unique
  name         String
  passwordHash String    @map("password_hash")
  role         UserRole  @default(USER)
  createdAt    DateTime  @default(now()) @map("created_at")
  
  // Relations
  apps         App[]
  purchases    Purchase[]
  reviews      Review[]
  
  @@map("users")
}

model App {
  id          String    @id @default(cuid())
  developerId String    @map("developer_id")
  title       String
  slug        String    @unique
  description String
  category    String
  price       Float
  status      AppStatus @default(DRAFT)
  createdAt   DateTime  @default(now()) @map("created_at")
  
  // Relations
  developer    User          @relation(fields: [developerId], references: [id], onDelete: Cascade)
  versions     AppVersion[]
  screenshots  Screenshot[]
  purchases    Purchase[]
  reviews      Review[]
  
  @@map("apps")
}

model AppVersion {
  id        String   @id @default(cuid())
  appId     String   @map("app_id")
  version   String
  fileUrl   String   @map("file_url")
  changelog String
  size      Int
  checksum  String
  createdAt DateTime @default(now()) @map("created_at")
  
  // Relations
  app       App      @relation(fields: [appId], references: [id], onDelete: Cascade)
  
  @@unique([appId, version])
  @@map("app_versions")
}

model Screenshot {
  id         String @id @default(cuid())
  appId      String @map("app_id")
  fileUrl    String @map("file_url")
  orderIndex Int    @map("order_index")
  
  // Relations
  app        App    @relation(fields: [appId], references: [id], onDelete: Cascade)
  
  @@map("screenshots")
}

model Purchase {
  id              String   @id @default(cuid())
  userId          String   @map("user_id")
  appId           String   @map("app_id")
  amount          Float
  currency        String   @default("usd")
  stripePaymentId String   @map("stripe_payment_id")
  createdAt       DateTime @default(now()) @map("created_at")
  
  // Relations
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  app             App      @relation(fields: [appId], references: [id], onDelete: Cascade)
  
  @@unique([userId, appId])
  @@map("purchases")
}

model Review {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  appId     String   @map("app_id")
  rating    Int      // 1-5 stars
  text      String
  createdAt DateTime @default(now()) @map("created_at")
  
  // Relations
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  app       App      @relation(fields: [appId], references: [id], onDelete: Cascade)
  
  @@unique([userId, appId])
  @@map("reviews")
}

enum UserRole {
  USER
  DEVELOPER
  ADMIN
}

enum AppStatus {
  DRAFT
  REVIEW
  APPROVED
  REJECTED
}